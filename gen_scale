#!/usr/bin/nodejs

var ch = require( 'chromatic' );
var fs = require( 'fs' );

function applyTemplate( s, o ) {
	return s.replace(  /\$\{([a-zA-Z0-9_]+)\}/g, function( s0, s1 ) {
		// console.error( s1 );
		s1 = s1.trim();
		if ( s1 in o ) {
			return o[ s1.trim() ];
		} else {
			return '';
		}
	});
}

function prefix( n ) {
	if ( ch.isTripleSharp( n ) ) {
		return '\\sharpdoublesharp ';
	} else if ( ch.isTripleFlat( n ) ) {
		return '\\flatdoubleflat ';
	} else if ( ch.isQuadrupleSharp( n ) ) {
		return '\\doublesharpdoublesharp ';
	} else if ( ch.isQuadrupleFlat( n ) ) {
		return '\\doubleflatdoubleflat ';
	} else {
		return "";
	}
}

function gen_flat( args ) {
	var notes    = args.notes;
	var trans    = args.trans;
	var postfix  = args.postfix;

	var notes_str  = "";
	var lyrics = "";
	for ( var i=0; i<notes.length; i++ ) {
		var note1 = notes[i];
		var note2 = ch.transpose( note1, trans );

		notes_str  += ( prefix( note1 ) +note1  + postfix( i, 'l',note1 ) +        " " + prefix( note2 ) + note2 + postfix( i, 'r', note2 ) + " s " );
		lyrics     += (                 +note1  +                                  " " +                 + note2 +                            "   " );

	}
	return [{
		caption  : '',
		notes    : notes_str,
		lyrics   : lyrics,
	}];
}

var TAG_START = '\\uin';
var TAG_STOP  = '\\uout';

function gen_sharp( args ) {
	var notes    = args.notes;
	var trans    = args.trans;
	var postfix  = args.postfix;
	var ms = TAG_START;
	var me = TAG_STOP;

	var result = [];
	var notes_01 = '';
	var notes_02 = '';
	var notes_03 = '';

	var lyrics_01 = '';
	var lyrics_02 = '';
	var lyrics_03 = '';

	for ( var i=0; i<notes.length; i++ ) {
		var note1 = notes[i];
		var note2 = ch.transpose( note1, trans );

		if ( ch.isIrregularAccidental( note2 ) || ch.isDoubleAccidental( note2 ) || ch.isTripleAccidental( note2 ) || ch.isQuadrupleAccidental( note2 )  ) {
			var rnote1 = ch.respell( note1 );
			var rnote2 = ch.respell( note2 );

			if ( ch.isTripleAccidental( note2 ) || ch.isQuadrupleAccidental( note2 ) ) {
				notes_01  += "\\textSpanColorB "; 
				notes_02  += "\\textSpanColorB "; 
				notes_03  += "\\textSpanColorB "; 
			}

			notes_01  += ( prefix(  note1 ) +  note1 + postfix(i,'l', note1, 1 ) + ms + " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 1 ) + me + " s " );
			notes_02  += ( prefix(  note1 ) +  note1 + postfix(i,'l', note1, 2 ) + ms + " " + prefix( rnote2 ) + rnote2 + postfix(i,'r',rnote2, 2 ) + me + " s " );
			notes_03  += ( prefix( rnote1 ) + rnote1 + postfix(i,'l',rnote1, 3 ) + ms + " " + prefix( rnote2 ) + rnote2 + postfix(i,'r',rnote2, 3 ) + me + " s " );
			lyrics_01 += (                     note1 +                                  " " +                     note2                             +      "   " );
			lyrics_02 += (                     note1 +                                  " " +                    rnote2                             +      "   " );
			lyrics_03 += (                    rnote1 +                                  " " +                    rnote2                             +      "   " );
		} else {
			notes_01  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 1 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 1 ) +      " s " );
			notes_02  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 2 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 2 ) +      " s " );
			notes_03  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 3 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 3 ) +      " s " );
			lyrics_01 += (                    note1  +                                  " " +                     note2                             +      "   " );
			lyrics_02 += (                    note1  +                                  " " +                     note2                             +      "   " );
			lyrics_03 += (                    note1  +                                  " " +                     note2                             +      "   " );
		}

	}

	result.push({
		caption  : '1. Harmonic Spelling',
		notes    : notes_01,
		lyrics   : lyrics_01,
	});
	result.push({
		caption  : '2. Enharmonic Spelling with Horizontal Interval Correctness',
		notes    : notes_02,
		lyrics   : lyrics_02,
	});
	result.push({
		caption  : '3. Enharmonic Spelling with Vertical Interval Correctness',
		notes    : notes_03,
		lyrics   : lyrics_03,
	});
	return result;
}

function createTemplate( arr ) {
	var result = "";

result += `
\\version "2.18.2"
\\include "aaron.ly"
\\include "chromatic-solfege-gen.ly"
\\include "lilypond-book-preamble.ly"
`;

	function createBlock( caption, notes, lyrics ) {
		var result =  "";
		if ( caption ) {
			result +=
`
\\markup \\bold \\italic {
    ${caption}
}
`;
		}

		result +=
`
\\makescore 
  \\relative do' {
    ${notes}
  }
  \\lyricmode {
    ${lyrics}
  }
`;
		return result;
	}

	for ( var i=0; i<arr.length; i++ ) {
		var e= arr[i];
		result += createBlock( e.caption, e.notes, e.lyrics );
	}
	return result.trim();
}




function exec( args ) {

	var result;
	if ( args.isSharp ) {
		result = gen_sharp( args );
	} else {
		result = gen_flat(  args );
	}
	// console.error( result );

	// console.error( notes, filename );
	// var template = fs.readFileSync( './template.ly', 'utf8' );
	// var output = applyTemplate( template, result );
	var output = createTemplate( result );

	console.error( args.filename );
	fs.writeFileSync( args.filename, output, 'utf8' );

	// process.stdout.write(   + '\n' );
}

function fmt( i, len ) {
	var s = String(i);
	while ( s.length < len ) {
		s ='0' + s; 
	}
	return s;
}

function chk( a,b ) {
	a = a.trim();
	b = b.trim();
	var arr = b.split( / +/ );
	for ( var i=0; i<arr.length; i++ ) {
		if ( a == arr[i] ) {
			return true;
		}
	}
	return false;
}

function create_pf( l0,r0, lcond,lthen,lelse, rcond,rthen,relse ) {
	return function( index, pos, note, type ) {
		if ( index == 0 ) {
			return pos == 'l' ? l0 : r0;
			switch ( pos ) {
				case 'l' : return l0;
				case 'r' : return r0;
				default : throw new Error( "this will not happen" );
			}
		} else {
			switch ( pos ) {
				case 'l' : return chk( note, lcond ) ? lthen : lelse;
				case 'r' : return chk( note, rcond ) ? rthen : relse;
				default : throw new Error( "this will not happen" );
			}
		}
	};
}

function create_pf3( args ) {
	var func_arr = [null];
	for ( var i=0; i<args.length; i++ ) {
		var o = args[i];
		if ( Array.isArray( o ) ) {
			func_arr.push( create_pf.apply( null, o ) );
		} else {
			func_arr.push( create_pf(
				o.l0,
				o.r0,
				o.lcond,
				o.lthen,
				o.lelse,
				o.rcond,
				o.rthen,
				o.relse
			));
		}
	}
	return function(index,pos,note,type) {
		return func_arr[ type ]( index, pos, note, type );
	};
}



function PF_NULL() {
	return '';
}

function PF_FIRST( index, pos, note ) {
	if ( index == 0 && pos == 'l' )
		return "'";
	else
		return '';
}

// Perfect 4th
var PF_INT_P4SU = create_pf3([
	[  "", "",    "", "", "",   "", "'", "" ],
	[  "", "",    "", "", "",   "", "'", "" ],
	[  "", "",    "", "", "",   "", "", "" ],
]);
var PF_INT_P4SD = create_pf3([
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
]);
var PF_INT_P4FD = create_pf3([
	[  "'", "",  "   le ra me se te", "", ",",  "",   "", "" ],
	[  "'", "",  "fa le ra me se te", "", ",",  "",   "", "" ],
	[  "'", "",  "fa le ra me se te", "", ",",  "",   "", "" ],
]);

// Aug 11th
var PF_INT_S11SU = create_pf3([
	[  "", "",    "", "", "",   "sol la do re mi fa", "'", "" ],
	[  "", "",    "", "", "",   "sol la do re mi fa", "'", "" ],
	[  "", "",    "", "", "",   "                  ", "", "" ],
]);

var PF_INT_S11SD = create_pf3([
	[  "'", "",   "la sol fa re do", "", ",",   "                  ", "",  "" ],
	[  "'", "",   "               ", "", ",",   "fa mi re do la sol", "'", "" ],
	[  "'", "",   "de le se me ra ", "", ",",   "                  ", "",  "" ],
]);

// l0,r0, lcond,lthen,lelse, rcond,rthen,relse
var PF_INT_S11FU = create_pf3([
	[  "", "", "", "", "", "", "", "" ],
	[  "", "", "", "", "", "", "", "" ],
	[  "", "", "", "", "", "", "", "" ],
]);
var PF_INT_S11FD = create_pf3([
	[  "'", "", "   ti la sol fa mi re do", ",", "",  "", "", ""    ],
	[  "'", "", "te ti la sol fa mi re do", ",", "",  "fa", "'", "" ],
	[  "'", "", "te ti la sol fa mi re do", ",", "",  "", "", ""    ],
]);

// Dim 5th
var PF_INT_D5SU = create_pf3([
	[  "", "'", "di ri fi si li  ", ",",  "",  "      ", "", "'" ],
	[  "", "'", "re mi fa fi sol la ti do ", "",   ",", "ti      ", "", "'" ],
	[  "", "'", "di ri ma si li        ", ",",  "",  "      ", "",  "'" ],
]);
var PF_INT_D5SD = create_pf3([
	[  "'", "'",  "", "", ",",  "",   "", "'" ],
	[  "'", "'",  "", "", ",",  "ti", "", "'" ],
	[  "'", "'",  "", "", ",",  "",   "", "'" ],
]);
var PF_INT_D5FU = create_pf3([
	[  "", "'", "re mi sol la ti", ",", "",    "", "", "'" ],
	[  "", "'", "",                ",",  "",    "sol la ti do re mi", "", "'" ],
	[  "", "'", "di ri ma si li",                ",",  "",    "", "", "'" ],
]);
var PF_INT_D5FD = create_pf3([
	[  "'", "'",    "", "", ",",    "mi re", "", "'" ],
	[  "'", "'",    "", "", ",",    "mi re do ti la sol", "", "'" ],
	[  "'", "'",    "", "", ",",    "", "", "'" ],
]);


// Perfect 5th
var PF_INT_5SU = create_pf3([
	[  "",  "'",    "di ri fi si li   ", ",", "",    "", "", "'" ],
	[  "",  "'",    "di ri fi si li ti", ",", "",    "", "", "'" ],
	[  "",  "'",    "di ri fi si li ti", ",", "",    "", "", "'" ],
]);
var PF_INT_5SD = create_pf3([
	[  "'", "'",  "", "", ",",  "", "", "'" ],
	[  "'", "'",  "", "", ",",  "", "", "'" ],
	[  "'", "'",  "", "", ",",  "", "", "'" ],
]);
var PF_INT_5FU = create_pf3([
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
]);


// Aug 5th
var PF_INT_S5SU = create_pf3([
	[  "", "'", "di ri fi si li    ", ",", "",  "      " , "", "'" ],
	[  "", "'", "                  ", "",  ",", "      ", "'", "'" ],
	[  "", "'", "re fa sol la te do", ",",  "",  "      ", "",  "'" ],
]);
var PF_INT_S5SD = create_pf3([
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
]);
var PF_INT_S5FU = create_pf3([
	[  "", "'",   "ra me fa se le te do", "", ",",   "", "", "'" ],
	[  "", "'",   "ra me    se le   ",    "", ",",   "", "", "'" ],
	[  "", "'",   "ra me fe se le de",    "", ",",   "", "", "'" ],
]);
// copy from s5sd
var PF_INT_S5FD = create_pf3([
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
]);

// Dim 13th
var PF_INT_F6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_F6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_F6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_F6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Natural 13th
var PF_INT_N6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_N6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_N6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_N6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);


// 7th
var PF_INT_7SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_7SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_7FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_7FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Major 7th
var PF_INT_M7SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_M7SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M7FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M7FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Special


// Aug 13th
var PF_INT_A6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "de      ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_A6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Aug 9th
var PF_INT_A9SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_A9SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A9FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A9FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Minor 9th
var PF_INT_MI9SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_D9SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_D9FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_D9FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Aug 2th
var PF_INT_A2SU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2SD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2FU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2FD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);

// Minor 2th
var PF_INT_MI2SU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D2SD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D2FU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D2FD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);

// Dim 3rd
var PF_INT_D3SU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D3SD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D3FU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_D3FD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);


// Aug 3rd
var PF_INT_A3FU = create_pf3([
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "'",  "" , "", "",  "", "", "" ],
]);
var PF_INT_A3FD = create_pf3([
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "'", "ta", ",", "",  "fa", "'", "" ],
]);

// Dim 4th
var PF_INT_D4SD = create_pf3([
	[  "'", "",  "ti li si mi fi ri di",   ",", "",   "",   "",  "" ],
	[  "'", "",  "li si ri di ",           ",", "",   "",   "",  "" ],
	[  "'", "",  "   li si ma    ri di ta",   ",", "",   "",   "",  "" ],
]);
var PF_INT_D4FU = create_pf3([
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "'",  "" , "", "",  "", "", "" ],
]);
var PF_INT_D4FD = create_pf3([
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "'", "ta", ",", "",  "fa", "'", "" ],
]);


/*
var PF_INT_M6SU = create_pf3([
	[  "", "'",    "        ",  ",", "",   "      ", "", "'" ],
	[  "", "'",    "        ",  "",  ",",  "      ", "'","'" ],
	[  "", "'",    "        ",  ",", "",   "      ", "", "'" ],
]);
var PF_INT_M6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
*/


function PF_INT_DIM4SU( index, pos, note ) {
	if ( index == 0 ) {
		return pos=='l' ? "'"  : '';
	} else { 
		if ( pos == 'l' ) {
			return chk( note, 'le ra me se te ' ) ? "" : ",";
		} else {
			return "";
		}
	}
}


var ASCEND_SHARP  = 'do di re ri mi fa fi sol si la li ti do'.split(' ');
var DESCEND_FLAT  = 'do ra re me mi fa se sol le la te ti do'.split(' ').reverse()
var ASCEND_FLAT   = 'do ra re me mi fa se sol le la te ti do'.split(' ');
var DESCEND_SHARP = 'do di re ri mi fa fi sol si la li ti do'.split(' ').reverse();

function batch() {
	var batch_pg = [
		// trans, id, prefix_formatter,  sharp=1/flat=0,  note_list
		// su:sharp ascend, sd:sharp descend, fu:flat ascend, fd:flat descend
	
		// Major 2nd
		[ 're', 'su', PF_NULL,      1, ASCEND_SHARP ,  ],
		[ 're', 'sd', PF_FIRST,     1, DESCEND_SHARP,  ],
		[ 're', 'fu', PF_NULL,      1, ASCEND_FLAT,    ],
		[ 're', 'fd', PF_FIRST,     1, DESCEND_FLAT,   ],

		// Minor 2nd
		[ 'ra', 'su', PF_NULL,      1, ASCEND_SHARP ,  ],
		[ 'ra', 'sd', PF_FIRST,     1, DESCEND_SHARP,  ],
		[ 'ra', 'fu', PF_NULL,      1, ASCEND_FLAT,    ],
		[ 'ra', 'fd', PF_FIRST,     1, DESCEND_FLAT,   ],

		// Minor 3rd
		[ 'me', 'su', PF_NULL ,     1, ASCEND_SHARP,   ],
		[ 'me', 'sd', PF_FIRST,     1, DESCEND_SHARP,  ],
		[ 'me', 'fu', PF_NULL ,     1, ASCEND_FLAT,    ],
		[ 'me', 'fd', PF_FIRST,     1, DESCEND_FLAT,   ],

		// Major 3rd
		[ 'mi', 'su', PF_NULL ,     1, ASCEND_SHARP,   ],
		[ 'mi', 'sd', PF_FIRST,     1, DESCEND_SHARP,  ],
		[ 'mi', 'fu', PF_NULL,      1, ASCEND_FLAT,    ],
		[ 'mi', 'fd', PF_FIRST,     1, DESCEND_FLAT,   ],

		// Perfect 4th
		[ 'fa', 'su', PF_INT_P4SU,  1, ASCEND_SHARP,   ],
		[ 'fa', 'sd', PF_INT_P4SD,  1, DESCEND_SHARP,  ],
		[ 'fa', 'fu', PF_NULL    ,  1, ASCEND_FLAT ,   ],
		[ 'fa', 'fd', PF_INT_P4FD,  1, DESCEND_FLAT ,  ],

		// Aug 11th
		[ 'fi', 'su', PF_INT_S11SU, 1, ASCEND_SHARP ,  ],
		[ 'fi', 'sd', PF_INT_S11SD, 1, DESCEND_SHARP , ],
		[ 'fi', 'fu', PF_INT_S11FU, 1, ASCEND_FLAT ,   ],
		[ 'fi', 'fd', PF_INT_S11FD, 1, DESCEND_FLAT ,  ],

		// Dim 5th
		[ 'se', 'su', PF_INT_D5SU, 1, ASCEND_SHARP ,   ],
		[ 'se', 'sd', PF_INT_D5SD, 1, DESCEND_SHARP ,  ],
		[ 'se', 'fu', PF_INT_D5FU, 1, ASCEND_FLAT ,    ],
		[ 'se', 'fd', PF_INT_D5FD, 1, DESCEND_FLAT ,   ],

		// Perfect 5th
		[ 'sol', 'su', PF_INT_5SU,    1, ASCEND_SHARP,   ],
		[ 'sol', 'sd', PF_INT_5SD,    1, DESCEND_SHARP,  ],
		[ 'sol', 'fu', PF_INT_5FU,    1, ASCEND_FLAT ,   ],
		[ 'sol', 'fd', PF_INT_5SD,    1, DESCEND_FLAT ,  ],

		// Aug 5th
		[ 'si', 'su', PF_INT_S5SU, 1, ASCEND_SHARP ,   ],
		[ 'si', 'sd', PF_INT_S5SD, 1, DESCEND_SHARP ,  ],
		[ 'si', 'fu', PF_INT_S5FU, 1, ASCEND_FLAT ,    ],
		[ 'si', 'fd', PF_INT_S5FD, 1, DESCEND_FLAT ,   ],

		// Dim 13th
		[ 'le', 'su', PF_INT_F6SU, 1, ASCEND_SHARP ,   ],
		[ 'le', 'sd', PF_INT_F6SD, 1, DESCEND_SHARP ,  ],
		[ 'le', 'fu', PF_INT_F6FU, 1, ASCEND_FLAT ,    ],
		[ 'le', 'fd', PF_INT_F6FD, 1, DESCEND_FLAT ,   ],

		// Natural 13th
		[ 'la', 'su', PF_INT_N6SU, 1, ASCEND_SHARP ,   ],
		[ 'la', 'sd', PF_INT_N6SD, 1, DESCEND_SHARP ,  ],
		[ 'la', 'fu', PF_INT_N6FU, 1, ASCEND_FLAT ,    ],
		[ 'la', 'fd', PF_INT_N6FD, 1, DESCEND_FLAT ,   ],

		// 7th
		[ 'te', 'su', PF_INT_7SU, 1, ASCEND_SHARP ,   ],
		[ 'te', 'sd', PF_INT_7SD, 1, DESCEND_SHARP ,  ],
		[ 'te', 'fu', PF_INT_7FU, 1, ASCEND_FLAT ,    ],
		[ 'te', 'fd', PF_INT_7FD, 1, DESCEND_FLAT ,   ],

		// Maj7th
		[ 'ti', 'su', PF_INT_M7SU, 1, ASCEND_SHARP ,   ],
		[ 'ti', 'sd', PF_INT_M7SD, 1, DESCEND_SHARP ,  ],
		[ 'ti', 'fu', PF_INT_M7FU, 1, ASCEND_FLAT ,    ],
		[ 'ti', 'fd', PF_INT_M7FD, 1, DESCEND_FLAT ,   ],

		// SPECIAL

		// Aug 13th
		[ 'li', 'su', PF_INT_A6SU, 1, ASCEND_SHARP ,   ],
		[ 'li', 'sd', PF_INT_A6SD, 1, DESCEND_SHARP ,  ],
		[ 'li', 'fu', PF_INT_A6FU, 1, ASCEND_FLAT ,    ],
		[ 'li', 'fd', PF_INT_A6FD, 1, DESCEND_FLAT ,   ],

		// Aug 9th
		[ 'ri', 'su', PF_INT_A9SU, 1, ASCEND_SHARP ,   ],
		[ 'ri', 'sd', PF_INT_A9SD, 1, DESCEND_SHARP ,  ],
		[ 'ri', 'fu', PF_INT_A9FU, 1, ASCEND_FLAT ,    ],
		[ 'ri', 'fd', PF_INT_A9FD, 1, DESCEND_FLAT ,   ],

		// Minor 9th
		[ 'ra', 'su', PF_INT_MI9SU, 1, ASCEND_SHARP ,   ],
		[ 'ra', 'sd', PF_INT_MI9SD, 1, DESCEND_SHARP ,  ],
		[ 'ra', 'fu', PF_INT_MI9FU, 1, ASCEND_FLAT ,    ],
		[ 'ra', 'fd', PF_INT_MI9FD, 1, DESCEND_FLAT ,   ],

		// Aug 2th
		[ 'ri', 'su', PF_INT_A2SU, 1, ASCEND_SHARP ,   ],
		[ 'ri', 'sd', PF_INT_A2SD, 1, DESCEND_SHARP ,  ],
		[ 'ri', 'fu', PF_INT_A2FU, 1, ASCEND_FLAT ,    ],
		[ 'ri', 'fd', PF_INT_A2FD, 1, DESCEND_FLAT ,   ],

		// Minor 2th
		[ 'ra', 'su', PF_INT_MI2SU, 1, ASCEND_SHARP ,   ],
		[ 'ra', 'sd', PF_INT_MI2SD, 1, DESCEND_SHARP ,  ],
		[ 'ra', 'fu', PF_INT_MI2FU, 1, ASCEND_FLAT ,    ],
		[ 'ra', 'fd', PF_INT_MI2FD, 1, DESCEND_FLAT ,   ],

		// Dim 3rd
		[ 'maw', 'su', PF_INT_D3SU, 1, ASCEND_SHARP ,   ],
		[ 'maw', 'sd', PF_INT_D3SD, 1, DESCEND_SHARP ,  ],
		[ 'maw', 'fu', PF_INT_D3FU, 1, ASCEND_FLAT ,    ],
		[ 'maw', 'fd', PF_INT_D3FD, 1, DESCEND_FLAT ,   ],

		// Dim 1st
		[ 'de', 'su', PF_NULL,  1, ASCEND_SHARP ,   ],
		[ 'de', 'sd', PF_FIRST, 1, DESCEND_SHARP ,  ],
		[ 'de', 'fu', PF_NULL,  1, ASCEND_FLAT ,    ],
		[ 'de', 'fd', PF_FIRST, 1, DESCEND_FLAT ,   ],

		// Aug 1st
		[ 'di', 'su', PF_NULL,  1, ASCEND_SHARP ,   ],
		[ 'di', 'sd', PF_FIRST, 1, DESCEND_SHARP ,  ],
		[ 'di', 'fu', PF_NULL,  1, ASCEND_FLAT ,    ],
		[ 'di', 'fd', PF_FIRST, 1, DESCEND_FLAT ,   ],

		// Dim 2nd
		[ 'raw', 'su', PF_NULL,  1, ASCEND_SHARP ,   ],
		[ 'raw', 'sd', PF_FIRST, 1, DESCEND_SHARP ,  ],
		[ 'raw', 'fu', PF_NULL,  1, ASCEND_FLAT ,    ],
		[ 'raw', 'fd', PF_FIRST, 1, DESCEND_FLAT ,   ],

		// Dim 3nd
		[ 'maw', 'su', PF_NULL,  1, ASCEND_SHARP ,   ],
		[ 'maw', 'sd', PF_FIRST, 1, DESCEND_SHARP ,  ],
		[ 'maw', 'fu', PF_NULL,  1, ASCEND_FLAT ,    ],
		[ 'maw', 'fd', PF_FIRST, 1, DESCEND_FLAT ,   ],

		// Aug 3nd
		[ 'ma', 'su', PF_NULL,  1, ASCEND_SHARP ,   ],
		[ 'ma', 'sd', PF_FIRST, 1, DESCEND_SHARP ,  ],
		[ 'ma', 'fu', PF_INT_A3FU,  1, ASCEND_FLAT ,    ],
		[ 'ma', 'fd', PF_INT_A3FD, 1, DESCEND_FLAT ,   ],

		// Dim 4th
		[ 'fe', 'su', PF_NULL,     1, ASCEND_SHARP ,   ],
		[ 'fe', 'sd', PF_INT_D4SD, 1, DESCEND_SHARP ,  ],
		[ 'fe', 'fu', PF_INT_D4FU, 1, ASCEND_FLAT ,    ],
		[ 'fe', 'fd', PF_INT_D4FD, 1, DESCEND_FLAT ,   ],


	];

	for ( var i=0; i<batch_pg.length; i++ ) {
		var arr = batch_pg[i];
		exec({
			notes    : arr[4],
			trans    : arr[0],
			isSharp  : arr[3],
			postfix  : arr[2],
			filename : 'out/PAT' + fmt(i,3) + "_" + arr[0] + "_" + arr[1] + '.ly' ,
		});
	}
}

batch();




// vim: filetype=javascript :

