#!/bin/bash
# shopt -s nullglob
START_TIME=$(date)

function max_proc_count {
   while [ `jobs | wc -l` -gt $1 ]
   do
      # echo "PC:`jobs | wc -l`"
      # jobs
      sleep 0.1
   done
}

OUTPUT_DIR="out"
DEBUG="false"
GENERATOR="c"
POSITIONAL=()

VOICE=$( nodejs -e 'console.log( require("chromatic/settings").scmFestivalVoice ) ')
# FILES=( "$@" )
FILES=()
FLG_VOICE="YES"
FLG_COMPILE_VOICE="NO"
# LY='lilypond -I /home/ats/Documents/lilypond/include/ --output=temp'
# LY='../ly'

LOGDIR=LOG
FILE_NOT_FOUND=FALSE

while [[ 0 < "$#"  ]]; do 
  case "$1" in
    -o|--output)
      OUTPUT_DIR="$2"
      shift 
      shift
      ;;
    -d|--debug)
      DEBUG="$2"
      shift
      shift
      ;;
    -g|--generator)
      GENERATOR="$2"
      shift
      shift
      ;;
    -v|--voice) 
        FLG_VOICE="YES"
        shift
      ;;
    -nv|--no-voice) 
      FLG_VOICE="NO"
      shift;
      ;;
    *) 
      # this is the input files
      if [[ -f "$1" ]]; then
        CHROMADOC_FILES+=("$1")
        shift;
      else
        >&2 echo "file not found : $1"
        FILE_NOT_FOUND="TRUE"
        shift;
      fi
      ;;
  esac; 
done

mkdir -v -p "$OUTPUT_DIR"

# If no file is specified to the arguments, it should default to all scale generators.
if [ ${#CHROMADOC_FILES[@]} -eq 0 ]; then
  if [ $FILE_NOT_FOUND = "TRUE" ]; then
    exit 1;
  fi

  CHROMADOC_FILES=( ./*.chromadoc )
  # Remove the old generated files.
  if [[ $FLG_VOICE == "YES" ]]; then
    rm -v "$OUTPUT_DIR"/*
  fi
fi


echo
echo '====================='
echo 'Generating files...'
echo '====================='
echo

if [[ $FLG_VOICE == "YES" ]]; then
  for FILE in  "${CHROMADOC_FILES[@]}" # "$@";
  do
      # echo "${FILE##*/}"
      {
        NAME="${FILE##*/}".js
        FILEJS="$FILE".js
        FILES+=("$FILEJS")
        echo "Processing ${NAME} ..."
        # echo "$OUTPUT_DIR/${NAME}"-[0-9]*
        rm -v "$OUTPUT_DIR/${NAME}-"*
        chromadoc2js --output "$OUTPUT_DIR" --debug "$DEBUG" --generator "$GENERATOR" "${FILE}" > "${FILEJS}"
        nodejs ${FILEJS}
      }
      echo 
      echo 
  done
fi



# # Create the file that include everything
# {
# 	ALL=( ./ch-* )
# 	for  i in  "${ALL[@]}" 
# 	do
# 		echo "\\input{ly-generated/$(basename $i)-output.tex}"
# 	done
# } > $OUTPUT_DIR/all-output.tex


# echo ${#CHROMADOC_FILES[@]}
# echo ${CHROMADOC_FILES[*]}
echo
echo '================================'
echo 'Compiling the generated files...'
echo '================================'
echo

cd $OUTPUT_DIR

for NAME in  "${FILES[@]}" # "$@";
do
    echo "Compiling ${NAME} ..."
    for  i in "${NAME}"-[0-9]*.ly # "$@";
    do
        # echo $i
        max_proc_count 5
        echo "${i##*/}"
        ( 
          FILENAME="${i##*/}"; 
          TMPDIR="TEMP-${FILENAME%%.ly}"
          mkdir $TMPDIR
          eval `lilypond_cmd` "--output=\"$TMPDIR/\" \"$FILENAME\""
          mv "$TMPDIR/${FILENAME%%.ly}.pdf" .
          rm -r "$TMPDIR"
        ) 2>&1 | tee "${i##*/}.LOG" &
    done;
done;

max_proc_count 1

echo
echo '====================================='
echo 'Compiling the Festival Header Voice  '
echo '====================================='
echo

if [[ $FLG_VOICE == "YES" ]]; then
  for NAME in  "${FILES[@]}"
  do
      echo "Compiling ${NAME} ..."
      for  i in "${NAME}"-[0-9]*.ftxt
      do
          # echo $i
          max_proc_count 5
          echo "${i##*/}"
          # text2wave -eval "($VOICE)"  "${i##*/}" > "${i##*/}.wav" 2> "${i##*/}.wav.LOG" &
          text2wave -eval "($VOICE)"  "${i##*/}" > "${i##*/}.wav" &
      done;
      echo 
      echo 
  done;
fi;

max_proc_count 1


# (Wed, 12 Feb 2020 01:30:34 +0900)
# CAREFUL : NO THIS FLAG IS SET TO "NO"
if [[ $FLG_COMPILE_VOICE == "YES" ]]; then
  echo
  echo '====================================='
  echo 'Compiling the Festival Singing Voice (new)'
  echo '====================================='
  echo
  for NAME in  "${FILES[@]}"
  do
      echo "Compiling ${NAME} ..."
      for  i in "${NAME}"*-compile.sh
      do
          # echo $i
          max_proc_count 5
          echo "${i##*/}"
          bash "$i" &
      done;
      echo 
      echo 
  done;
  max_proc_count 1
fi;


# echo
# echo '================================================'
# echo 'Compiling the Festival Header Voice SINGING MODE'
# echo '================================================'
# echo
# 
# for NAME in  "${FILES[@]}"
# do
#   echo "Compiling ${NAME} ..."
#   for  i in "${NAME}"-[0-9]*.ftxt
#   do
#       # echo $i
#       max_proc_count 5
#       echo "${i##*/}"
#       text2wave -eval "($VOICE)"  "${i##*/}" > "${i##*/}.wav" &  # 2> /dev/null &
#   done;
#   echo 
#   echo 
#   max_proc_count 4
# done;

bebeep &

if false; then
  WAV_OUTPUT_FILES=()
  for NAME in  "${FILES[@]}" 
  do
      WAV_OUTPUT_FILES+=( $NAME-[0-9]*.wav )
      echo "${WAV_OUTPUT_FILES[@]}"
  done
fi

# vlc "${WAV_OUTPUT_FILES[@]}" &

END_TIME=$(date)

echo "start  $START_TIME"
echo "end    $END_TIME"


# lilypond -I /home/ats/Documents/lilypond/include/ *.ly
# vim: expandtab sw=2:
