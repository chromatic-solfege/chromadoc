#!/usr/bin/nodejs

require( 'local/settings' );
var ScaleGenerator = require( 'local/chromatic/formatter' );

var THE_TEXT = 
`
\\paper  {
    #(set! paper-alist (cons '("a4insides" . (cons (* 5 in) (* 3 in))) paper-alist))
    #(set-paper-size "a4insides")
}
`;

ScaleGenerator.prototype.writeScore2 = function ( type, notes ) {
	var id = notes.split( /\s+/ ).shift();
	var output = ScaleGenerator.applyTemplate( notes, null,null, this.settings );

	output = output + "\n" + THE_TEXT + "\n";

	this.nextOutputFilename( type + '-' + id );
	ScaleGenerator.writeFile( this.currentOutputFilename(), output );

	this.writeIncludeText( '\\noindent $\\vcenter{ \\hbox{ \\includegraphics[width=0.6 \\textwidth]{' + this.currentOutputFilenameAsPDF() + '}}}$\n' );
};

var OUTPUT_PATH = 'out/'
function batch() {
	var c = new ScaleGenerator( OUTPUT_PATH /*, 'basic' */ );
	c.disableDisabled();

	c.disable();

	c.writeHeader0( "Basics" );
	c.writeTextBody( 'Welcome to the world of chromatic solfège.' );

	c.writeHeader1( "Natural" );
	c.writeTextBody( 'The diatonic notes are named as the traditional solfège.' );
	c.writeScore(  "example", "@do  do  re mi fa sol la ti do" , 0.6 );

	c.writeHeader1( "Flat" );
	c.writeTextBody( 'When flat is added to a note, the name of the note alters. The vowel part of the name will be replaced to “\\textit{e}”. In case the vowel is already “\\textit{e}”, it will be replaced with “\\textit{a}”.' );
	c.writeScore(  "example", "@do  de  ra me fe se  le te de" , 0.6 );

	c.writeHeader1( "Sharp" );
	c.writeTextBody( 'Sharp is treated in the same manner except it will be replaced with “i”. In case the vowel is already “i”, it will be replaced with “a” as well as flat.' );
	c.writeScore(  "example", "@do  di  ri mi fi si  li ta di" , 0.6 );

	c.writeHeader1( "Double Flat" );
	c.writeTextBody( 'Double flat is also treated in the same manner as flat and sharp, except the vowel is replaced with “aw”.' );
	c.writeScore(  "example", "@do  daw raw maw faw saw law taw daw" , 0.6 );

	c.writeHeader1( "Double Sharp" );
	c.writeTextBody( 'Double sharp is also treated in the same manner as double flat, except the vowel is replaced with “ai”.' );
	c.writeScore(  "example", "@do  dai rai mai fai sai lai tai dai" , 0.6 );

	c.writeHeader1( "Triple Flat" );
	c.writeTextBody( 'Notes with triple flat are called similarily with notes with double flats, except their names end with “f”.' );
	c.writeScore(  "example", "@do  dae  rae mae fae sae lae tae dae" , 0.6 );

	c.writeHeader1( "Triple Sharp" );
	c.writeTextBody( 'Notes with triple sharp are called similarily with notes with double sharp, except their names end with “f”.' );
	c.writeScore(  "example", "@do  dao  rao mao fao sao lao tao dao" , 0.6 );


	c.writeHeader0( "Basic Exercise" );
	c.writeTextBody( 
			"This section introduces some exercises to build fluency. " +
			"Read them aloud repeatedly until you can recite without seeing the actual spells."
		);

	c.enable();

	// Note Names 1
	c.writeHeader1( "Note Names 0" );
	c.writeHeader2( "Natural" );
	{
		function left_rotate(arr,offset) {
			arr = arr.concat();
			return arr.concat( arr.splice( 0, offset ) );
		}
		function build_octaves( arr ) {
			return [].concat( 
				// arr.map( (s)=> s + ","     ),
				arr.map( (s)=> s + ""      ),
				arr.map( (s)=> s + "'"     ),
				arr.map( (s)=> s + "''"    ),
				arr.map( (s)=> s + "'''"   ),
				arr.map( (s)=> s + "''''"  ),
				arr.map( (s)=> s + "'''''" )
			)
		}
		function merge_with_offset( notes , offset, from, to  ) {
			var result = [];
			for ( var i=from; i!=to; from < to ? i++ : i-- ) {
				result.push( notes[ ( i          ) ] + '8 [ ' );
				result.push( notes[ ( i + offset ) ] + '8 ] ' );
			}
			result.push( notes[ ( to          ) ] + '8 ] ' );

			return result.join( ' ' ) ;
		}
		function num2interval( n ) {
			switch ( n )  {
				case 0 : return "1st";
				case 1 : return "2nd";
				case 2 : return "3rd";
				case 3 : return "4th";
				case 4 : return "5th";
				case 5 : return "6th";
				case 6 : return "7th";
				case 7 : return "8th";
				default :
						 throw new Error('');
			}
		}

		for ( var ridx=0; ridx<7; ridx++ ) {
			var scale = "do re mi fa sol la ti".split(' ') ;
			var key =  left_rotate( scale, ridx ).shift();
			var notes = left_rotate( build_octaves( scale ), ridx );

			c.writeHeader2( "key in " + key ) ;
			c.writeScore( 'scale', '@do \\absolute { ' + notes.slice( 7, 15  ).join( ' ' ) + ' | \\break ' + notes.slice( 7, 15 ).reverse().join( ' ' )  + ' } ' );

			for ( var nidx=2; nidx<7; nidx++ ) {
				c.writeHeader3( "key in " + key + ' ' + num2interval( nidx ) );
				c.writeScore( nidx + '-01-u', `@do \\absolute \{ ${ merge_with_offset( notes,  nidx, 7  ,14 ) } \}`,null,null,null,undefined,{tempo:70} );
				c.writeScore( nidx + '-02-d', `@do \\absolute \{ ${ merge_with_offset( notes,  nidx, 14 ,7  ) } \}`,null,null,null,undefined,{tempo:70} );
			}
		}
	}

	c.disable();


	c.writeHeader1( "Note Names 1" );

	c.writeHeader2( "Flat" );
	c.writeScore( "notename-flat",         "do  de  ra me fe se le te de | de te le se fe me ra de" );

	c.writeHeader2( "Sharp" );
	c.writeScore( "notename-sharp",        "do  di  ri ma fi si li ta di | di ta li si fi ma ri di" );


	// Chromatic Scale 1
	c.writeHeader1( "Chromatic 1" );

	c.writeHeader2( "Sharp Ascending And Flat Descending" );
	c.writeScore( "chromatic-01-sf", "do  do di re ri mi fa fi sol si la li ti do | do ti te la le sol se fa mi me re ra do" );

	c.writeHeader2( "Flat Ascending And Sharp Descending" );
	c.writeScore( "chromatic-02-fs", "do  do ra re me mi fa se sol le la te ti do | do ti li la si sol fi fa mi ri re di do" );

	c.writeHeader2( "Sharp" );
	c.writeScore( "chromatic-01-sharp",    "do  do di re ri mi fa fi sol si la li ti do | do ti li la si sol fi fa mi ri re di do" );

	c.writeHeader2( "Flat" );
	c.writeScore( "chromatic-02-flat",     "do  do ra re me mi fa se sol le la te ti do | do ti te la le sol se fa mi me re ra do" );

	// Enharmonicity 1
	c.writeHeader1( "Enharmonically Equivalent Notes 1" );
	c.writeHeader2( "Single Accidentals 1" );
	c.writeScore( "enharmonic-single-accidentals-sf", "do " +
          "di ra  s  ri me  s  mi fe  s  ma fa  s  fi se  s  si le  s  li te  s  ti de  s  ta do  s  di ra \n" +
          "di ra  s  ta do  s  ti de  s  li te  s  si le  s  fi se  s  ma fa  s  mi fe  s  ri me  s  di ra"
	);
	c.writeHeader2( "Single Accidentals 2" );
	c.writeScore( "enharmonic-single-accidentals-fs", "do " +
          "ra di  s  me ri  s  fe mi  s  fa ma  s  se fi  s  le si  s  te li  s  de ti  s  do ta  s  ra di \n" +
          "ra di  s  do ta  s  de ti  s  te li  s  le si  s  se fi  s  fa ma  s  fe mi  s  me ri  s  ra di"
	);

	// Note Names 2
	c.writeHeader1( "Note Names 2" );

	c.writeHeader2( "Double Flat" );
	c.writeScore( "notename-double-flat",  "do  daw raw maw faw saw law taw daw | daw taw law saw faw maw raw daw" );

	c.writeHeader2( "Double Sharp" );
	c.writeScore( "notename-double-sharp", "do  dai rai mai fai sai lai tai dai | dai tai lai sai fai mai rai dai" );

	c.writeHeader1( "Enharmonically Equivalent Notes 2" );
	c.writeHeader2( "Double Sharp" );
	c.writeScore( "enharmonic-double-sharp-sn", "do " +
          "dai re  s  rai mi  s  mai fi  s  fai sol  s  sai la   s  lai ti  s  tai di  s  dai re \n" +
          "dai re  s  tai di  s  lai ti  s  sai la   s  fai sol  s  mai fi  s  rai mi  s  dai re " 
	);
	c.writeScore( "enharmonic-double-sharp-ns", "do " +
          "re dai  s  mi rai  s  fi mai  s  sol fai  s  la sai  s  ti lai  s  di tai  s  re dai \n" +
          "re dai  s  di tai  s  ti lai  s  la sai  s  sol fai  s  fi mai  s  mi rai  s  re dai" 
	);

	c.writeHeader2( "Double Flat" );
	c.writeScore( "enharmonic-double-flat-fn", "do " +
          "daw te s raw do  s  maw re  s  faw me  s  saw fa  s  law sol  s  taw la  s  daw te   \n" +
          "daw te s taw la  s  law sol s  saw fa  s  faw me  s  maw re   s  raw do  s  daw te " 
	);
	c.writeScore( "enharmonic-double-flat-nf", "do " +
          "te daw  s do raw   s  re maw   s  me faw   s  fa saw   s  sol law   s  la taw   s  te daw    \n" +
          "te daw  s la taw   s  sol law  s  fa saw   s  me faw   s  re maw    s  do raw   s  te daw  " 
	);

	// Note Names 3
	c.writeHeader1( "Note Names 3" );

	c.writeHeader2( "Triple Flat" );
	c.writeScore( "notename-triple-flat",  "do  dae rae mae fae sae lae tae dae | dae tae lae sae fae mae rae dae" );

	c.writeHeader2( "Triple Sharp" );
	c.writeScore( "notename-triple-sharp", "do  dao rao mao fao sao lao tao dao | dao tao lao sao fao mao rao dao" );

	c.writeHeader1( "Enharmonically Equivalent Notes 3" );
	c.writeHeader2( "Triple Sharp" );
	c.writeScore( "enharmonic-triple-sharp-sn", "do " +
          "dao  me  s  rao  fa  s  mao  sol  s  fao  le  s  sao  te   s  lao  do  s  tao  re  s  dao  me \n" +
          "dao  me  s  tao  re  s  lao  do   s  sao  te  s  fao  le   s  mao  sol s  rao  fa  s  dao  me" 
	);
	c.writeScore( "enharmonic-triple-sharp-ns", "do " +
          "me   dao s  fa   rao   s  sol mao   s  le fao   s  te sao    s  do lao    s  re tao   s  me dao   \n" +
          "me   dao s  re   tao   s  do lao    s  te sao   s  le fao    s  sol mao   s  fa rao   s  me dao  " 
	);

	c.writeHeader2( "Triple Flat" );
	c.writeScore( "enharmonic-triple-flat-fn", "do " +
          "dae la  s  rae ti  s mae di  s  fae re   s  sae mi  s  lae fi  s  tae si  s  dae la \n" +
          "dae la  s  tae si  s lae fi  s  sae mi   s  fae re  s  mae di  s  rae ti  s  dae la" 
	);
	c.writeScore( "enharmonic-triple-flat-nf", "do " +
          "la  dae  s  ti  rae  s di  mae  s  re  fae   s  mi  sae  s  fi  lae  s  si  tae  s  la  dae \n" +
          "la  dae  s  si  tae  s fi  lae  s  mi  sae   s  re  fae  s  di  mae  s  ti  rae  s  la  dae" 
	);


	// Chromatic Scale 2

	c.writeHeader1( "Chromatic 2" );
	c.writeHeader2( "Exercise 1" );
	c.writeScore( "notename-accidentals", 
			"@do  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@re  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@mi  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@fa  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@sol do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@la  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@ti  do  di dai dao dai di do s do de daw dae daw de do \n " + 
			"@do  do  di dai dao dai di do s do de daw dae daw de do \n " 
		);

	c.writeHeader2( "Exercise 2" );
	c.writeScore( "notename-accidentals", 
			"@do  do  re mi fa sol la ti do       | do ti la sol fa mi re do \n " + 

			"@do  di ri ma fi si li ta di         | di ta li si fi ma ri di   \n " +
			"@do  dai rai mai fai sai lai tai dai | dai tai lai sai fai mai rai dai \n " +
			"@do  dao rao mao fao sao lao tao dao | dao tao lao sao fao mao rao dao \n "  +
			"@do  dai rai mai fai sai lai tai dai | dai tai lai sai fai mai rai dai \n " +
			"@do  di ri ma fi si li ta di         | di ta li si fi ma ri di  \n " +

			"@do  do re mi fa sol la ti do        | do ti la sol fa mi re do \n " + 

			"@do  de  ra me fe se le te de         | de te le se  fe me ra de \n " + 
			"@do  daw raw maw faw saw law taw daw | daw taw law saw faw maw raw daw \n " + 
			"@do  dae rae mae fae sae lae tae dae | dae tae lae sae fae mae rae dae \n "  +
			"@do  daw raw maw faw saw law taw daw | daw taw law saw faw maw raw daw \n " + 
			"@do  de ra me fe se le te de         | de te le se  fe me ra de \n " + 

			"@do  do re mi fa sol la ti do        | do ti la sol fa mi re do \n " + 
			""
			);



	// Chromatic
	c.writeHeader1( "Chromatic 3" );

	c.writeHeader2( "Chromatically Ascending With Sharp – 1 Up 1 Down" );
	c.writeScore( "chromatic-03",  "do "+
			"do di do s    di re di s    re ri re s  ri mi ri s   mi fa mi s   fa fi fa s \n" +
			"fi sol fi s   sol si sol s  si la si s  la li la s   li ti li s   ti do ti s do1" );

	c.writeHeader2( "Chromatically Descending With Flat – 1 Down 1 Up" );
	c.writeScore( "chromatic-04",  "do "+
			"do' ti do  s  ti te ti  s  te la te  s  la le la  s  le sol le  s  sol se sol  s  se fa se  s \n " +
			"fa mi fa  s  mi me mi  s  me re me  s  re ra re  s  ra do ra  s  do1 " );

	c.writeHeader2( "Chromatically Ascending With Flat – 1 Up 1 Down" );
	c.writeScore( "chromatic-04",  "do "+
			"do ra do  s   ra re ra s    re me re  s me mi me  s  mi fa mi  s  fa se fa \n "+
			"se sol se s   sol le sol s  le la le  s la te la  s  te ti te  s  ti do ti s do1 " );

	c.writeHeader2( "Chromatically Descending With Sharp– 1 Down 1 Up" );
	c.writeScore( "chromatic-04",  "do "+
			"do' ti do  s  ti li ti  s  li la li  s  la si la  s  si sol si  s  sol fi sol  s  fi fa fi \n "+
			"fa mi fa  s  mi ri mi  s  ri re ri  s  re di re  s  di do di  s  do1 " );

	c.writeHeader2( "Chromatically Ascending With Sharp –  2 Up 1 Down" );
	c.writeScore( "chromatic-04",  "do "+
			"do di re  s  di re ri  s  re ri mi  s  ri mi fa  s  mi fa fi  s  fa fi sol  s  fi sol si  s \n" +
			"sol si la  s  si la li  s  la li ti  s  li ti do  s  ti do di  s  do1  \n" );

	c.writeHeader2( "Chromatically Descending With Flat – 2 Down 1 Up" );
	c.writeScore( "chromatic-04",  "do "+
			"do' ti te  s  ti te la  s  te la le  s  la le sol  s  le sol se  s  sol se fa  s  se fa mi  s  \n"+
			"fa mi me  s  mi me re  s  me re ra  s  re ra do  s  ra do ti  s  do1 " );































	c.close();
}

batch();




// vim: filetype=javascript :

