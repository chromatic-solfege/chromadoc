#!/usr/bin/nodejs

var ch = require( 'chromatic' );
var fs = require( 'fs' );
var applyTemplate = require( 'chromatic/template' );
var OUTPUT_PATH = 'out/'

// var FILENAME_PREFIX = 'ch-100-interval';
var FILENAME_PREFIX = require('path').basename( __filename );

function __applyTemplate( s, o ) {
	return s.replace(  /\$\{([a-zA-Z0-9_]+)\}/g, function( s0, s1 ) {
		// console.error( s1 );
		s1 = s1.trim();
		if ( s1 in o ) {
			return o[ s1.trim() ];
		} else {
			return '';
		}
	});
}

function prefix( n ) {
	if ( ch.isTripleSharp( n ) ) {
		return '\\sharpdoublesharp ';
	} else if ( ch.isTripleFlat( n ) ) {
		return '\\flatdoubleflat ';
	} else if ( ch.isQuadrupleSharp( n ) ) {
		return '\\doublesharpdoublesharp ';
	} else if ( ch.isQuadrupleFlat( n ) ) {
		return '\\doubleflatdoubleflat ';
	} else {
		return "";
	}
}


var TAG_START = '\\uin';
var TAG_STOP  = '\\uout';

function gen_sharp( args ) {
	var notes    = args.notes;
	var trans    = args.trans;
	var postfix  = args.postfix;
	var ms = TAG_START;
	var me = TAG_STOP;

	var notes_01 = '';
	var notes_02 = '';
	var notes_03 = '';

	var lyrics_01 = '';
	var lyrics_02 = '';
	var lyrics_03 = '';

	var is_irregular = false;
	for ( var i=0; i<notes.length; i++ ) {
		var note1 = notes[i];
		var note2 = ch.transpose( note1, trans );
		// console.error( "***" , ch.transpose( note1, trans ) );
		// console.error( "***" , "note1", note1, "note2",note2 );

		if ( ch.isIrregularAccidental( note2 ) || ch.isDoubleAccidental( note2 ) || ch.isTripleAccidental( note2 ) || ch.isQuadrupleAccidental( note2 )  ) {
			is_irregular = true;

			var rnote1 = ch.respell( note1 );
			var rnote2 = ch.respell( note2 );

			if ( ch.isTripleAccidental( note2 ) || ch.isQuadrupleAccidental( note2 ) ) {
				notes_01  += "\\textSpanColorB "; 
				notes_02  += "\\textSpanColorB "; 
				notes_03  += "\\textSpanColorB "; 
			}

			notes_01  += ( prefix(  note1 ) +  note1 + postfix(i,'l', note1, 1 ) + ms + " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 1 ) + me + " s " );
			notes_02  += ( prefix(  note1 ) +  note1 + postfix(i,'l', note1, 2 ) + ms + " " + prefix( rnote2 ) + rnote2 + postfix(i,'r',rnote2, 2 ) + me + " s " );
			notes_03  += ( prefix( rnote1 ) + rnote1 + postfix(i,'l',rnote1, 3 ) + ms + " " + prefix( rnote2 ) + rnote2 + postfix(i,'r',rnote2, 3 ) + me + " s " );
			lyrics_01 += (                     note1 +                                  " " +                     note2                             +      "   " );
			lyrics_02 += (                     note1 +                                  " " +                    rnote2                             +      "   " );
			lyrics_03 += (                    rnote1 +                                  " " +                    rnote2                             +      "   " );
		} else {
			notes_01  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 1 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 1 ) +      " s " );
			notes_02  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 2 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 2 ) +      " s " );
			notes_03  += ( prefix(  note1 ) + note1  + postfix(i,'l', note1, 3 ) +      " " + prefix(  note2 ) +  note2 + postfix(i,'r', note2, 3 ) +      " s " );
			lyrics_01 += (                    note1  +                                  " " +                     note2                             +      "   " );
			lyrics_02 += (                    note1  +                                  " " +                     note2                             +      "   " );
			lyrics_03 += (                    note1  +                                  " " +                     note2                             +      "   " );
		}

	}

	if ( is_irregular ) {
		var fname_01 = args.fname_generate(); // LATE_GEN_2018
		var fname_02 = args.fname_generate(); // LATE_GEN_2018
		return [
			{
				// caption  : '1. Harmonic Spelling',
				text : applyTemplate([
					{
						// caption  : '', 
						filename : fname_01, // LATE_GEN_2018
						notes    : notes_01,
						lyrics   : lyrics_01,
					},
				]),
				filename : fname_01, // LATE_GEN_2018
			},
			{
				// caption  : '2. Enharmonic Spelling with Horizontal Interval Correctness',
				// caption  : 'enharmonic spelling',
				text : applyTemplate([
					{
						// caption  : 'enharmonic spelling', 
						filename : fname_02, // LATE_GEN_2018
						notes    : notes_02,
						lyrics   : lyrics_02,
					},
				]),
				filename : fname_02, // LATE_GEN_2018
			},
		];
	} else {
		var fname_01 = args.fname_generate(); // LATE_GEN_2018
		return [
			{
				text : applyTemplate([
					{
						filename : fname_01, // LATE_GEN_2018
						notes    : notes_01,
						lyrics   : lyrics_01,
					},
				]),
				filename : fname_01, // LATE_GEN_2018
			},
		];
	}
}



function fmt( i, len ) {
	var s = String(i);
	while ( s.length < len ) {
		s ='0' + s; 
	}
	return s;
}

function chk( a,b ) {
	a = a.trim();
	b = b.trim();
	var arr = b.split( / +/ );
	for ( var i=0; i<arr.length; i++ ) {
		if ( a == arr[i] ) {
			return true;
		}
	}
	return false;
}

function create_pf( l0,r0, lcond,lthen,lelse, rcond,rthen,relse ) {
	return function( index, pos, note, type ) {
		// console.error( 'create_pf(', index, pos, note, type , ')' );
		if ( index == 0 ) {
			return pos == 'l' ? l0 : r0;
			switch ( pos ) {
				case 'l' : return l0;
				case 'r' : return r0;
				default : throw new Error( "this will not happen" );
			}
		} else {
			switch ( pos ) {
				case 'l' : return chk( note, lcond ) ? lthen : lelse;
				case 'r' : return chk( note, rcond ) ? rthen : relse;
				default : throw new Error( "this will not happen" );
			}
		}
	};
}

function create_pf3( args ) {
	var func_arr = [null];
	for ( var i=0; i<args.length; i++ ) {
		var o = args[i];
		if ( Array.isArray( o ) ) {
			func_arr.push( create_pf.apply( null, o ) );
		} else {
			func_arr.push( create_pf(
				o.l0,
				o.r0,
				o.lcond,
				o.lthen,
				o.lelse,
				o.rcond,
				o.rthen,
				o.relse
			));
		}
	}
	return function(index,pos,note,type) {
		return func_arr[ type ]( index, pos, note, type );
	};
}



function PF_NULL() {
	return '';
}

function PF_FIRST( index, pos, note ) {
	if ( index == 0 && pos == 'l' )
		return "'";
	else
		return '';
}

// Perfect 4th
var PF_INT_P4SU = create_pf3([
	[  "", "",    "", "", "",   "", "'", "" ],
	[  "", "",    "", "", "",   "", "'", "" ],
	[  "", "",    "", "", "",   "", "", "" ],
]);
var PF_INT_P4SD = create_pf3([
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
	[  "'", "",  "la sol fa re do", "", ",",  "",   "", "" ],
]);
var PF_INT_P4FD = create_pf3([
	[  "'", "",  "   le ra me se te", "", ",",  "",   "", "" ],
	[  "'", "",  "fa le ra me se te", "", ",",  "",   "", "" ],
	[  "'", "",  "fa le ra me se te", "", ",",  "",   "", "" ],
]);

// Augumented 4th
var PF_INT_A4SU = create_pf3([
	[  "", "",    "", "", "",   "sol la do re mi fa", "'", "" ],
	[  "", "",    "", "", "",   "sol la do re mi fa", "'", "" ],
	[  "", "",    "", "", "",   "                  ", "", "" ],
]);

var PF_INT_A4SD = create_pf3([
	[  "'", "",   "la sol fa re do", "", ",",   "                  ", "",  "" ],
	[  "'", "",   "               ", "", ",",   "fa mi re do la sol", "'", "" ],
	[  "'", "",   "de le se me ra ", "", ",",   "                  ", "",  "" ],
]);

// l0,r0, lcond,lthen,lelse, rcond,rthen,relse
var PF_INT_A4FU = create_pf3([
	[  "", "", "", "", "", "", "", "" ],
	[  "", "", "", "", "", "", "", "" ],
	[  "", "", "", "", "", "", "", "" ],
]);
var PF_INT_A4FD = create_pf3([
	[  "'", "", "   ti la sol fa mi re do", ",", "",  "", "", ""    ],
	[  "'", "", "te ti la sol fa mi re do", ",", "",  "fa", "'", "" ],
	[  "'", "", "te ti la sol fa mi re do", ",", "",  "", "", ""    ],
]);

// Diminished 5th
var PF_INT_D5SU = create_pf3([
	[  "", "'", "di ri fi si li  ", ",",  "",  "      ", "", "'" ],
	[  "", "'", "re mi fa fi sol la ti do ", "",   ",", "ti      ", "", "'" ],
	[  "", "'", "di ri ma si li        ", ",",  "",  "      ", "",  "'" ],
]);
var PF_INT_D5SD = create_pf3([
	[  "'", "'",  "", "", ",",  "",   "", "'" ],
	[  "'", "'",  "", "", ",",  "ti", "", "'" ],
	[  "'", "'",  "", "", ",",  "",   "", "'" ],
]);
var PF_INT_D5FU = create_pf3([
	[  "", "'", "re mi sol la ti", ",", "",    "", "", "'" ],
	[  "", "'", "",                ",",  "",    "sol la ti do re mi", "", "'" ],
	[  "", "'", "di ri ma si li",                ",",  "",    "", "", "'" ],
]);
var PF_INT_D5FD = create_pf3([
	[  "'", "'",    "", "", ",",    "mi re", "", "'" ],
	[  "'", "'",    "", "", ",",    "mi re do ti la sol", "", "'" ],
	[  "'", "'",    "", "", ",",    "", "", "'" ],
]);


// Perfect 5th
var PF_INT_5SU = create_pf3([
	[  "",  "'",    "di ri fi si li   ", ",", "",    "", "", "'" ],
	[  "",  "'",    "di ri fi si li ti", ",", "",    "", "", "'" ],
	[  "",  "'",    "di ri fi si li ti", ",", "",    "", "", "'" ],
]);
var PF_INT_5SD = create_pf3([
	[  "'", "'",  "", "", ",",  "", "", "'" ],
	[  "'", "'",  "", "", ",",  "", "", "'" ],
	[  "'", "'",  "", "", ",",  "", "", "'" ],
]);
var PF_INT_5FU = create_pf3([
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
	[  "", "'",   "re mi sol la ti", ",", "",  "", "", "'" ],
]);


// Augumented 5th
var PF_INT_S5SU = create_pf3([
	[  "", "'",    "di ri fi si li    ", ",", "",     "      ", "",  "'" ],
	[  "", "'",    "                  ", "",  ",",    "      ", "'", "'" ],
	[  "", "'",    "re fa sol la te do", ",", "",     "      ", "",  "'" ],
]);
var PF_INT_S5SD = create_pf3([
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
]);
var PF_INT_S5FU = create_pf3([
	[  "", "'",   "ra me fa se le te do", "", ",",   "", "", "'" ],
	[  "", "'",   "ra me    se le   ",    "", ",",   "", "", "'" ],
	[  "", "'",   "ra me fe se le de",    "", ",",   "", "", "'" ],
]);
// copy from s5sd
var PF_INT_S5FD = create_pf3([
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
	[  "'", "'",   "", "", ",",   "", "", "'" ],
]);

// Minor 6th
var PF_INT_F6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_F6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_F6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_F6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Major 6th
var PF_INT_N6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_N6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_N6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_N6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);


// Minor 7th
var PF_INT_7SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_7SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_7FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_7FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Major 7th
var PF_INT_M7SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_M7SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M7FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_M7FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Special


// Augumented 6th
var PF_INT_A6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "de      ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_A6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A6FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Diminished 6th
var PF_INT_D6SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "fa      ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "de fe   ",  "", ",",   "ti    ", "", "'" ],
]);
var PF_INT_D6SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "ti    ", "", "'" ],
]);
var PF_INT_D6FU = create_pf3([
	[  "", "'",   "                  ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "re mi sol la ti do", ",", "",    "      ", "", "'" ],
	[  "", "'",   "fe                ", "", ",",    "ti    ", "", "'" ],
]);
var PF_INT_D6FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);


// Sharp 9th
var PF_INT_A9SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_A9SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A9FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A9FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Flat 9th
var PF_INT_D9SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
]);
var PF_INT_D9SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_D9FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_D9FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);

// Augumented 2th
var PF_INT_A2SU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2SD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2FU = create_pf3([
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
	[  "", "",    "        ",  "", "",   "      ", "", "" ],
]);
var PF_INT_A2FD = create_pf3([
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
	[  "'", "",    "        ",  "", "",   "      ", "", "" ],
]);




// Augumented 3rd
var PF_INT_A3SU = create_pf3([
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "'",  "" , "", "",  "fa", "'", "" ],
]);
var PF_INT_A3SD = create_pf3([
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "",  "ti li si fi ri di",   ",", "",   "",   "",  "" ],
	[  "'", "'", "", ",", "",  "", "'", "" ],
]);
var PF_INT_A3FU = create_pf3([
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "'",  "" , "", "",  "", "", "" ],
]);
var PF_INT_A3FD = create_pf3([
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "",  "",   "", "",   "",   "",  "" ],
	[  "'", "'", "ta", ",", "",  "fa", "'", "" ],
]);

// Diminished 4th
var PF_INT_D4SD = create_pf3([
	[  "'", "",  "ti li si mi fi ri di",   ",", "",   "",   "",  "" ],
	[  "'", "",  "li si ri di ",           ",", "",   "",   "",  "" ],
	[  "'", "",  "   li si ma    ri di ta",   ",", "",   "",   "",  "" ],
]);
var PF_INT_D4FU = create_pf3([
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "",   "",  "", "",  "", "", "" ],
	[  "", "'",  "" , "", "",  "", "", "" ],
]);
var PF_INT_D4FD = create_pf3([
	[  "'", "",  "te le se me ra", "",  ",",   "",   "",  "" ],
	[  "'", "",  "ti te le la sol se fa mi me re ra do", "",  ",",   "",  "",  "" ],
	[  "'", "",  "ti te le la sol se fi mi me re ra do", "",  ",",   "", "'", "" ],
]);


// Major 7th
var PF_INT_A7SU = create_pf3([
	[  "", "'",    "        ",  "", ",",   "      ", "", "'" ],
	[  "", "'",    "        ",  "", ",",   "      ", "'","'" ],
	[  "", "'",    "        ",  ",",",",   "      ", "", "'" ],
]);
var PF_INT_A7SD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A7FU = create_pf3([
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
	[  "", "'",   "         ", "", ",",    "      ", "", "'" ],
]);
var PF_INT_A7FD = create_pf3([
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
	[  "'", "'",   "        ", "", ",",    "      ", "", "'" ],
]);


var ASCEND_SHARP  = 'do di re ri mi fa fi sol si la li ti do'.split(' ');
var DESCEND_FLAT  = 'do ra re me mi fa se sol le la te ti do'.split(' ').reverse()
var ASCEND_FLAT   = 'do ra re me mi fa se sol le la te ti do'.split(' ');
var DESCEND_SHARP = 'do di re ri mi fa fi sol si la li ti do'.split(' ').reverse();

function batch() {
	var batch_pg = [
		[ '=' , 'Exercise to Acquire Better Understanding for Intervals' ],

		[ '==' , 'Intervals' ],

		// su:sharp ascend, sd:sharp descend, fu:flat ascend, fd:flat descend
	
		// mark, trans, id, prefix_formatter,  sharp=1/flat=0,  note_list, filename(generated later)
		// Major 2nd
		[ '===' , 'Major 2nd' ],
		[ '*', 're', 'su', PF_NULL,      1, ASCEND_SHARP ,    "",  ],
		[ '*', 're', 'sd', PF_FIRST,     1, DESCEND_SHARP,    "",  ],
		[ '*', 're', 'fu', PF_NULL,      1, ASCEND_FLAT,      "",  ],
		[ '*', 're', 'fd', PF_FIRST,     1, DESCEND_FLAT,     "",  ],

		// Minor 2nd
		[ '===' , 'Minor 2nd' ],
		[ '*', 'ra', 'su', PF_NULL,      1, ASCEND_SHARP ,    "",  ],
		[ '*', 'ra', 'sd', PF_FIRST,     1, DESCEND_SHARP,    "",  ],
		[ '*', 'ra', 'fu', PF_NULL,      1, ASCEND_FLAT,      "",  ],
		[ '*', 'ra', 'fd', PF_FIRST,     1, DESCEND_FLAT,     "",  ],

		// Minor 3rd
		[ '===' , 'Minor 3nd' ],
		[ '*', 'me', 'su', PF_NULL ,     1, ASCEND_SHARP,     "",  ],
		[ '*', 'me', 'sd', PF_FIRST,     1, DESCEND_SHARP,    "",  ],
		[ '*', 'me', 'fu', PF_NULL ,     1, ASCEND_FLAT,      "",  ],
		[ '*', 'me', 'fd', PF_FIRST,     1, DESCEND_FLAT,     "",  ],

		// Major 3rd
		[ '===' , 'Major 3nd' ],
		[ '*', 'mi', 'su', PF_NULL ,     1, ASCEND_SHARP,     "",  ],
		[ '*', 'mi', 'sd', PF_FIRST,     1, DESCEND_SHARP,    "",  ],
		[ '*', 'mi', 'fu', PF_NULL,      1, ASCEND_FLAT,      "",  ],
		[ '*', 'mi', 'fd', PF_FIRST,     1, DESCEND_FLAT,     "",  ],

		// Perfect 4th
		[ '===' , 'Perfect 4th' ],
		[ '*', 'fa', 'su', PF_INT_P4SU,  1, ASCEND_SHARP,     "",  ],
		[ '*', 'fa', 'sd', PF_INT_P4SD,  1, DESCEND_SHARP,    "",  ],
		[ '*', 'fa', 'fu', PF_NULL    ,  1, ASCEND_FLAT ,     "",  ],
		[ '*', 'fa', 'fd', PF_INT_P4FD,  1, DESCEND_FLAT ,    "",  ],

		// Augumented 4th
		[ '===' , 'Augumented 4th' ],
		[ '*', 'fi', 'su', PF_INT_A4SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'fi', 'sd', PF_INT_A4SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'fi', 'fu', PF_INT_A4FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'fi', 'fd', PF_INT_A4FD, 1, DESCEND_FLAT ,     "",  ],

		// Diminished 5th
		[ '===' , 'Diminished 5th' ],
		[ '*', 'se', 'su', PF_INT_D5SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'se', 'sd', PF_INT_D5SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'se', 'fu', PF_INT_D5FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'se', 'fd', PF_INT_D5FD, 1, DESCEND_FLAT ,     "",  ],

		// Perfect 5th
		[ '===' , 'Perfect 5th' ],
		[ '*', 'sol', 'su', PF_INT_5SU,    1, ASCEND_SHARP,   "",  ],
		[ '*', 'sol', 'sd', PF_INT_5SD,    1, DESCEND_SHARP,  "",  ],
		[ '*', 'sol', 'fu', PF_INT_5FU,    1, ASCEND_FLAT ,   "",  ],
		[ '*', 'sol', 'fd', PF_INT_5SD,    1, DESCEND_FLAT ,  "",  ],

		// Augumented 5th
		[ '===' , 'Augumented 5th' ],
		[ '*', 'si', 'su', PF_INT_S5SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'si', 'sd', PF_INT_S5SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'si', 'fu', PF_INT_S5FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'si', 'fd', PF_INT_S5FD, 1, DESCEND_FLAT ,     "",  ],

		// Minor 6th
		[ '===' , 'Minor 6th' ],
		[ '*', 'le', 'su', PF_INT_F6SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'le', 'sd', PF_INT_F6SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'le', 'fu', PF_INT_F6FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'le', 'fd', PF_INT_F6FD, 1, DESCEND_FLAT ,     "",  ],

		// Major 6th
		[ '===' , 'Major 6th' ],
		[ '*', 'la', 'su', PF_INT_N6SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'la', 'sd', PF_INT_N6SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'la', 'fu', PF_INT_N6FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'la', 'fd', PF_INT_N6FD, 1, DESCEND_FLAT ,     "",  ],

		// Minor 7th
		[ '===' , 'Minor 7th' ],
		[ '*', 'te', 'su', PF_INT_7SU, 1, ASCEND_SHARP ,      "",  ],
		[ '*', 'te', 'sd', PF_INT_7SD, 1, DESCEND_SHARP ,     "",  ],
		[ '*', 'te', 'fu', PF_INT_7FU, 1, ASCEND_FLAT ,       "",  ],
		[ '*', 'te', 'fd', PF_INT_7FD, 1, DESCEND_FLAT ,      "",  ],

		// Major 7th
		[ '===' , 'Major 7th' ],
		[ '*', 'ti', 'su', PF_INT_M7SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'ti', 'sd', PF_INT_M7SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'ti', 'fu', PF_INT_M7FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'ti', 'fd', PF_INT_M7FD, 1, DESCEND_FLAT ,     "",  ],

		// Tensions

		[ '==' , 'Intervals Larger Than Octave' ],
		[ '===' , 'Sharp 9th' ],
		// Sharp 9th
		[ '*', 'ri', 'su', PF_INT_A9SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'ri', 'sd', PF_INT_A9SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'ri', 'fu', PF_INT_A9FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'ri', 'fd', PF_INT_A9FD, 1, DESCEND_FLAT ,     "",  ],

		// Flat 9th
		[ '===' , 'Flat 9th' ],
		[ '*', 'ra', 'su', PF_INT_D9SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'ra', 'sd', PF_INT_D9SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'ra', 'fu', PF_INT_D9FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'ra', 'fd', PF_INT_D9FD, 1, DESCEND_FLAT ,     "",  ],

		//
		// Special
		//
		[ '==' , 'Theoretical Intervals' ],

		// Augumented 1st
		[ '===' , 'Augumented 1st' ],
		[ '*', 'di', 'su', PF_NULL,  1, ASCEND_SHARP ,        "",  ],
		[ '*', 'di', 'sd', PF_FIRST, 1, DESCEND_SHARP ,       "",  ],
		[ '*', 'di', 'fu', PF_NULL,  1, ASCEND_FLAT ,         "",  ],
		[ '*', 'di', 'fd', PF_FIRST, 1, DESCEND_FLAT ,        "",  ],

		// Diminished 1st
		[ '===' , 'Diminished 1st' ],
		[ '*', 'de', 'su', PF_NULL,  1, ASCEND_SHARP ,        "",  ],
		[ '*', 'de', 'sd', PF_FIRST, 1, DESCEND_SHARP ,       "",  ],
		[ '*', 'de', 'fu', PF_NULL,  1, ASCEND_FLAT ,         "",  ],
		[ '*', 'de', 'fd', PF_FIRST, 1, DESCEND_FLAT ,        "",  ],

		// Augumented 2th
		[ '===' , 'Augumented 2st' ],
		[ '*', 'ri', 'su', PF_NULL,      1, ASCEND_SHARP ,    "",  ],
		[ '*', 'ri', 'sd', PF_FIRST,     1, DESCEND_SHARP ,   "",  ],
		[ '*', 'ri', 'fu', PF_NULL,      1, ASCEND_FLAT ,     "",  ],
		[ '*', 'ri', 'fd', PF_FIRST,     1, DESCEND_FLAT ,    "",  ],

		// Diminished 2nd
		[ '===' , 'Diminished 2st' ],
		[ '*', 'raw', 'su', PF_NULL,  1, ASCEND_SHARP ,       "",  ],
		[ '*', 'raw', 'sd', PF_FIRST, 1, DESCEND_SHARP ,      "",  ],
		[ '*', 'raw', 'fu', PF_NULL,  1, ASCEND_FLAT ,        "",  ],
		[ '*', 'raw', 'fd', PF_FIRST, 1, DESCEND_FLAT ,       "",  ],

		// Augumented 3nd
		[ '===' , 'Augumented 3st' ],
		[ '*', 'ma', 'su', PF_INT_A3SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'ma', 'sd', PF_INT_A3SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'ma', 'fu', PF_INT_A3FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'ma', 'fd', PF_INT_A3FD, 1, DESCEND_FLAT ,     "",  ],
	
		// Diminished 3nd
		[ '===' , 'Diminished 3st' ],
		[ '*', 'maw', 'su', PF_NULL,  1, ASCEND_SHARP ,       "",  ],
		[ '*', 'maw', 'sd', PF_FIRST, 1, DESCEND_SHARP ,      "",  ],
		[ '*', 'maw', 'fu', PF_NULL,  1, ASCEND_FLAT ,        "",  ],
		[ '*', 'maw', 'fd', PF_FIRST, 1, DESCEND_FLAT ,       "",  ],

		// Diminished 4th
		[ '===' , 'Diminished 4st' ],
		[ '*', 'fe', 'su', PF_NULL,     1, ASCEND_SHARP ,     "",  ],
		[ '*', 'fe', 'sd', PF_INT_D4SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'fe', 'fu', PF_INT_D4FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'fe', 'fd', PF_INT_D4FD, 1, DESCEND_FLAT ,     "",  ],
	
		// Augumented 6th
		[ '===' , 'Augumented 6th' ],
		[ '*', 'li', 'su', PF_INT_A6SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'li', 'sd', PF_INT_A6SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'li', 'fu', PF_INT_A6FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'li', 'fd', PF_INT_A6FD, 1, DESCEND_FLAT ,     "",  ],

		// Diminished  6th
		[ '===' , 'Diminished 6th' ],
		[ '*', 'law', 'su', PF_INT_D6SU, 1, ASCEND_SHARP ,    "",  ],
		[ '*', 'law', 'sd', PF_INT_D6SD, 1, DESCEND_SHARP ,   "",  ],
		[ '*', 'law', 'fu', PF_INT_D6FU, 1, ASCEND_FLAT ,     "",  ],
		[ '*', 'law', 'fd', PF_INT_D6FD, 1, DESCEND_FLAT ,    "",  ],

		// Augumented 7th
		[ '===' , 'Augumented 7th' ],
		[ '*', 'ta', 'su', PF_INT_A7SU, 1, ASCEND_SHARP ,     "",  ],
		[ '*', 'ta', 'sd', PF_INT_A7SD, 1, DESCEND_SHARP ,    "",  ],
		[ '*', 'ta', 'fu', PF_INT_A7FU, 1, ASCEND_FLAT ,      "",  ],
		[ '*', 'ta', 'fd', PF_INT_A7FD, 1, DESCEND_FLAT ,     "",  ],

		// Diminished 7th
		[ '===' , 'Diminished 7th' ],
		[ '*', 'taw', 'su', PF_INT_A7SU, 1, ASCEND_SHARP ,    "",  ],
		[ '*', 'taw', 'sd', PF_INT_A7SD, 1, DESCEND_SHARP ,   "",  ],
		[ '*', 'taw', 'fu', PF_INT_A7FU, 1, ASCEND_FLAT ,     "",  ],
		[ '*', 'taw', 'fd', PF_INT_A7FD, 1, DESCEND_FLAT ,    "",  ],

	];


	{
		{
			let CNT=0;
			let SEQ = 0;
			function fname_generate(interval, category ) {
				return FILENAME_PREFIX + '-' + fmt(CNT,3) + "-" + interval + "-" + category + "-" + ( SEQ ++ ) + '.ly';
			}
			function fname_next() {
				CNT++;
				SEQ=0;
			}
		}

		let include_text = "";

		for ( var i=0; i<batch_pg.length; i++ ) {
			var arr = batch_pg[i];
			switch ( arr[0] ) {
				case '=' :
					include_text+= '\\section{'    + arr[1] + '}\n';
					console.error( '\\section{'    + arr[1] + '}' );
					break;
				case '==' :
					include_text+= '\\subsection{'    + arr[1] + '}\n';
					console.error( '\\subsection{'    + arr[1] + '}' );
					break;
				case '===' :
					include_text+= '\\subsubsection{' + arr[1] + '}\n';
					console.error( '\\subsubsection{' + arr[1] + '}' );
					break;

				case '*' :
					console.error( "generating ", arr[1] +'-' + arr[2] );

					// LATE_GEN_2018 ... ADDED (Wed, 18 Apr 2018 17:33:36 +0900)  
					var output_arr = gen_sharp({
						fname_generate : ()=> fname_generate( arr[1], arr[2] ) , // LATE_GEN_2018 
						notes    : arr[5],
						trans    : arr[1],
						isSharp  : arr[4],
						postfix  : arr[3],
					});

					// if ( arr[2].endsWith( 'd' ) ) {
					// 	continue;
					// }
					
					switch ( arr[2] ) {
						case 'fu' :
							include_text+= '\\paragraph{Flat Ascending}\n';
							break;
						case 'fd' :
							include_text+= '\\paragraph{Flat Descending}\n';
							break;
						case 'su' :
							include_text+= '\\paragraph{Sharp Ascending}\n';
							break;
						case 'sd' :
							include_text+= '\\paragraph{Sharp Descending}\n';
							break;
					}

					for ( var oi=0; oi<output_arr.length; oi++ ) {
						let o = output_arr[oi];
						// console.error( "oi=",oi, "o.filename", o.filename );// LATE_GEN_2018

						// let filename = fname_generate( arr[1], arr[2] ); // LATE_GEN_2018
						let filename = o.filename; // LATE_GEN_2018
						fs.writeFileSync( OUTPUT_PATH + filename, o.text, 'utf8' );
						console.error( OUTPUT_PATH + filename );

						if ( o.caption )
							include_text+= '\\paragraph{' + o.caption + '}\n';


						let filename2 = filename.replace( /\.ly$/, '.pdf' );
						include_text+= '\\noindent\\includegraphics[width=1.0\\textwidth]{' + filename2 + '}\n';
					}
					fname_next();

					break;
				default :
					//
			}
		}

		console.error( OUTPUT_PATH + FILENAME_PREFIX + '-output.tex' );
		fs.writeFileSync( OUTPUT_PATH + FILENAME_PREFIX + '-output.tex', include_text, 'utf8' );
	}

}

batch();




// vim: filetype=javascript :

